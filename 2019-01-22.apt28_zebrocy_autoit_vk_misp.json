{"response": [{"Event":{"id":"108","orgc_id":"2","org_id":"2","date":"2019-01-21","threat_level_id":"2","info":"2019-01-21: APT28 Autoit Zebrocy Progression","published":false,"uuid":"5c463bd0-63bc-41f1-91dc-622168f8e8cf","attribute_count":"9","analysis":"0","timestamp":"1548178519","distribution":"3","proposal_email_lock":false,"locked":false,"publish_timestamp":"0","sharing_group_id":"0","disable_correlation":false,"extends_uuid":"","event_creator_email":"vitali.kremez@gmail.com","Org":{"id":"2","name":"VK-Intel","uuid":"5bfa439e-c978-4dcd-b474-73f568f8e8cf"},"Orgc":{"id":"2","name":"VK-Intel","uuid":"5bfa439e-c978-4dcd-b474-73f568f8e8cf"},"Attribute":[{"id":"89026","type":"md5","category":"Payload delivery","to_ids":true,"uuid":"5c463bd0-a7c8-4670-8a27-622168f8e8cf","event_id":"108","distribution":"5","timestamp":"1548106781","comment":"APT28 Zebrocy Autoit Samples","sharing_group_id":"0","deleted":false,"disable_correlation":false,"object_id":"0","object_relation":null,"value":"d6751b148461e0f863548be84020b879","Galaxy":[],"ShadowAttribute":[]},{"id":"89027","type":"url","category":"External analysis","to_ids":true,"uuid":"5c463bd0-2174-48b9-bfe3-622168f8e8cf","event_id":"108","distribution":"5","timestamp":"1548132590","comment":"APT28 Zebrocy Autoit C2 AS9009 M247, GB @m247.com","sharing_group_id":"0","deleted":false,"disable_correlation":false,"object_id":"0","object_relation":null,"value":"http:\/\/194.187.249.126","Galaxy":[],"ShadowAttribute":[]},{"id":"89028","type":"md5","category":"Payload installation","to_ids":true,"uuid":"5c463c0a-0f30-4502-9cf3-79aa68f8e8cf","event_id":"108","distribution":"5","timestamp":"1548106762","comment":"APT28 Zebrocy Autoit Samples","sharing_group_id":"0","deleted":false,"disable_correlation":false,"object_id":"0","object_relation":null,"value":"311f24eb2dda26c26f572c727a25503b","Galaxy":[],"ShadowAttribute":[]},{"id":"89029","type":"md5","category":"Payload installation","to_ids":true,"uuid":"5c463c0a-de14-441b-8ec9-79aa68f8e8cf","event_id":"108","distribution":"5","timestamp":"1548106762","comment":"APT28 Zebrocy Autoit Samples","sharing_group_id":"0","deleted":false,"disable_correlation":false,"object_id":"0","object_relation":null,"value":"7b1974e61795e84b6aacf33571320c2a","Galaxy":[],"ShadowAttribute":[]},{"id":"89030","type":"md5","category":"Payload installation","to_ids":true,"uuid":"5c463c0a-eb38-4d29-9bf5-79aa68f8e8cf","event_id":"108","distribution":"5","timestamp":"1548106762","comment":"APT28 Zebrocy Autoit Samples","sharing_group_id":"0","deleted":false,"disable_correlation":false,"object_id":"0","object_relation":null,"value":"c2e1f2cf18ca987ebb3e8f4c09a4ef7e","Galaxy":[],"ShadowAttribute":[]},{"id":"89031","type":"url","category":"Network activity","to_ids":true,"uuid":"5c463c55-d144-426e-a69c-622168f8e8cf","event_id":"108","distribution":"5","timestamp":"1548132452","comment":"APT28 Zebrocy C2 AS201011 NETZBETRIEB-GMBH, DE @core-backbone.com","sharing_group_id":"0","deleted":false,"disable_correlation":false,"object_id":"0","object_relation":null,"value":"http:\/\/80.255.6.5","Galaxy":[],"ShadowAttribute":[]},{"id":"89032","type":"url","category":"Network activity","to_ids":true,"uuid":"5c463c55-ee08-441f-bd1a-622168f8e8cf","event_id":"108","distribution":"5","timestamp":"1548132475","comment":"APT28 Zebrocy C2 AS49544 I3DNET, NL Qhoster","sharing_group_id":"0","deleted":false,"disable_correlation":false,"object_id":"0","object_relation":null,"value":"http:\/\/220.158.216.127","Galaxy":[],"ShadowAttribute":[]},{"id":"89033","type":"url","category":"Network activity","to_ids":true,"uuid":"5c463c55-d868-4e4b-9235-622168f8e8cf","event_id":"108","distribution":"5","timestamp":"1548132418","comment":"APT28 Zebrocy C2  AS29073 QUASINETWORKS, NL @libertyvps.net","sharing_group_id":"0","deleted":false,"disable_correlation":false,"object_id":"0","object_relation":null,"value":"https:\/\/145.249.106.198\/","Galaxy":[],"ShadowAttribute":[]},{"id":"89034","type":"yara","category":"Payload delivery","to_ids":false,"uuid":"5c470084-1db8-4000-8d91-097e68f8e8cf","event_id":"108","distribution":"0","timestamp":"1548178519","comment":"Possible experimental APT28 Autoit Yara","sharing_group_id":"0","deleted":false,"disable_correlation":false,"object_id":"0","object_relation":null,"value":"import \"pe\"\r\n\r\nrule apt28_zebrocy_autoit_loader {\r\nmeta:\r\n    reference = \"Detects Possible Autoit APT28 Zebrocy downloader\"\r\n    author = \"@VK_Intel\"\r\n    date = \"2019-01-21; Edited: 2019-01-22\"\r\n    type = \"experimental\/not for hunting\"\r\n \r\nstrings: \r\n \/\/ \"AU3!EA068\" header\r\n $au3 = { 41 55 33 21 45 41 30 36 4D }\r\n $autscr = \"\/AutoIt3ExecuteLine\" fullword wide\r\n $arch = \"<assemblyIdentity type=\\\"win32\\\" name=\\\"Microsoft.Windows.Common-Controls\\\" version=\\\"6.0.0.0\\\" language=\\\"*\\\" processorArchitec\" ascii\r\n  $MS = \"MS \" ascii wide\r\n  $Microsoft = \"Microsoft Inc.\" ascii wide \r\n     $s0 = \"PROCESSGETSTATS\" fullword wide\r\n      $s1 = \"SHELLEXECUTEWAIT\" fullword wide\r\n      $s2 = \"WINGETPROCESS\" fullword wide\r\n      $s3 = \"0Expected a \\\"=\\\" operator in assignment statement.*Invalid keyword at the start of this line.\" fullword wide\r\n      $s4 = \"SHELLEXECUTE\" fullword wide\r\n      $s5 = \"SCRIPTNAME\" fullword wide \/* base64 encoded string 'H$H=3@0' *\/\r\n      $s6 = \"PROCESSSETPRIORITY\" fullword wide\r\n      $s7 = \"HTTPSETUSERAGENT\" fullword wide\r\n      $s8 = \"PROCESSWAITCLOSE\" fullword wide\r\n      $s9 = \"PROCESSCLOSE\" fullword wide\r\n      $s10 = \"PROCESSWAIT\" fullword wide\r\n      $s11 = \"PROCESSEXISTS\" fullword wide\r\n      $s12 = \"PROCESSORARCH\" fullword wide\r\n      $s13 = \"AUTOITWINGETTITLE\" fullword wide\r\n  condition:\r\n     uint16(0) == 0x5a4d and ($MS or $Microsoft) and $au3 and $autscr and $arch and filesize < 1500KB \r\n     and all of ($s*) and pe.number_of_resources > 7 and\r\n    (for any i in (0..pe.number_of_resources - 1):\r\n      (pe.resources[i].type == pe.RESOURCE_TYPE_RCDATA))\r\n\r\n }","Galaxy":[],"ShadowAttribute":[]}],"ShadowAttribute":[],"RelatedEvent":[],"Galaxy":[{"id":"32","uuid":"fa7016a8-1707-11e8-82d0-1b73d76eb204","name":"Enterprise Attack - Attack Pattern","type":"mitre-enterprise-attack-attack-pattern","description":"ATT&CK Tactic","version":"4","icon":"map","namespace":"mitre-attack","GalaxyCluster":[{"id":"4720","collection_uuid":"","type":"mitre-enterprise-attack-attack-pattern","value":"Command-Line Interface - T1059","tag_name":"misp-galaxy:mitre-enterprise-attack-attack-pattern=\"Command-Line Interface - T1059\"","description":"Command-line interfaces provide a way of interacting with computer systems and is a common feature across many types of operating system platforms. (Citation: Wikipedia Command-Line Interface) One example command-line interface on Windows systems is cmd, which can be used to perform a number of tasks including execution of other software. Command-line interfaces can be interacted with locally or remotely via a remote desktop application, reverse shell session, etc. Commands that are executed run with the current permission level of the command-line interface process unless the command includes process invocation that changes permissions context for that execution (e.g. Scheduled Task).\n\nAdversaries may use command-line interfaces to interact with systems and execute other software during the course of an operation.\n\nDetection: Command-line interface activities can be captured through proper logging of process execution with command-line arguments. This information can be useful in gaining additional insight to adversaries' actions through how they use native processes or custom tools.\n\nPlatforms: Linux, Windows, macOS\n\nData Sources: Process command-line parameters, Process monitoring\n\nPermissions Required: Administrator, SYSTEM, User\n\nRemote Support: No","galaxy_id":"32","source":"https:\/\/github.com\/mitre\/cti","authors":["MITRE"],"version":"4","uuid":"7385dfaf-6886-4229-9ecd-6fd678040830","tag_id":"234","meta":{"external_id":["T1059"],"kill_chain":["mitre-attack:enterprise-attack:execution"],"mitre_data_sources":["Process command-line parameters","Process monitoring"],"mitre_platforms":["Linux","Windows","macOS"],"refs":["https:\/\/attack.mitre.org\/wiki\/Technique\/T1059","https:\/\/en.wikipedia.org\/wiki\/Command-line%20interface"]}},{"id":"4713","collection_uuid":"","type":"mitre-enterprise-attack-attack-pattern","value":"Scripting - T1064","tag_name":"misp-galaxy:mitre-enterprise-attack-attack-pattern=\"Scripting - T1064\"","description":"Adversaries may use scripts to aid in operations and perform multiple actions that would otherwise be manual. Scripting is useful for speeding up operational tasks and reducing the time required to gain access to critical resources. Some scripting languages may be used to bypass process monitoring mechanisms by directly interacting with the operating system at an API level instead of calling other programs. Common scripting languages for Windows include VBScript and PowerShell but could also be in the form of command-line batch scripts.\n\nScripts can be embedded inside Office documents as macros that can be set to execute when files used in Spearphishing Attachment and other types of spearphishing are opened. Malicious embedded macros are an alternative means of execution than software exploitation through Exploitation for Client Execution, where adversaries will rely on macos being allowed or that the user will accept to activate them.\n\nMany popular offensive frameworks exist which use forms of scripting for security testers and adversaries alike.  (Citation: Metasploit) (Citation: Metasploit),  (Citation: Veil) (Citation: Veil), and PowerSploit (Citation: Powersploit) are three examples that are popular among penetration testers for exploit and post-compromise operations and include many features for evading defenses. Some adversaries are known to use PowerShell. (Citation: Alperovitch 2014)\n\nDetection: Scripting may be common on admin, developer, or power user systems, depending on job function. If scripting is restricted for normal users, then any attempts to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent.\n\nScripts are likely to perform actions with various effects on a system that may generate events, depending on the types of monitoring used. Monitor processes and command-line arguments for script execution and subsequent behavior. Actions may be related to network and system information Discovery, Collection, or other scriptable post-compromise behaviors and could be used as indicators of detection leading back to the source script.\n\nAnalyze Office file attachments for potentially malicious macros. Execution of macros may create suspicious process trees depending on what the macro is designed to do. Office processes, such as word.exe, spawning instances of cmd.exe, script application like wscript.exe or powershell.exe, or other suspicious processes may indicate malicious activity. (Citation: Uperesia Malicious Office Documents)\n\nPlatforms: Linux, macOS, Windows\n\nData Sources: Process monitoring, File monitoring, Process command-line parameters\n\nDefense Bypassed: Process whitelisting, Data Execution Prevention, Exploit Prevention\n\nPermissions Required: User","galaxy_id":"32","source":"https:\/\/github.com\/mitre\/cti","authors":["MITRE"],"version":"4","uuid":"7fd87010-3a00-4da3-b905-410525e8ec44","tag_id":"7","meta":{"external_id":["T1064"],"kill_chain":["mitre-attack:enterprise-attack:defense-evasion","mitre-attack:enterprise-attack:execution"],"mitre_data_sources":["Process monitoring","File monitoring","Process command-line parameters"],"mitre_platforms":["Linux","macOS","Windows"],"refs":["https:\/\/attack.mitre.org\/wiki\/Technique\/T1064","http:\/\/www.metasploit.com","https:\/\/www.veil-framework.com\/framework\/","https:\/\/github.com\/mattifestation\/PowerSploit","https:\/\/blog.crowdstrike.com\/deep-thought-chinese-targeting-national-security-think-tanks\/","https:\/\/www.uperesia.com\/analyzing-malicious-office-documents"]}},{"id":"4739","collection_uuid":"","type":"mitre-enterprise-attack-attack-pattern","value":"Registry Run Keys \/ Start Folder - T1060","tag_name":"misp-galaxy:mitre-enterprise-attack-attack-pattern=\"Registry Run Keys \/ Start Folder - T1060\"","description":"Adding an entry to the \"run keys\" in the Registry or startup folder will cause the program referenced to be executed when a user logs in. (Citation: Microsoft Run Key) The program will be executed under the context of the user and will have the account's associated permissions level.\n\nAdversaries can use these configuration locations to execute malware, such as remote access tools, to maintain persistence through system reboots. Adversaries may also use Masquerading to make the Registry entries look as if they are associated with legitimate programs.\n\nDetection: Monitor Registry for changes to run keys that do not correlate with known software, patch cycles, etc. Monitor the start folder for additions or changes. Tools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing the run keys' Registry locations and startup folders. (Citation: TechNet Autoruns) Suspicious program execution as startup programs may show up as outlier processes that have not been seen before when compared against historical data.\n\nChanges to these locations typically happen under normal conditions when legitimate software is installed. To increase confidence of malicious activity, data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.\n\nPlatforms: Windows\n\nData Sources: Windows Registry, File monitoring\n\nPermissions Required: User, Administrator","galaxy_id":"32","source":"https:\/\/github.com\/mitre\/cti","authors":["MITRE"],"version":"4","uuid":"9422fc14-1c43-410d-ab0f-a709b76c72dc","tag_id":"235","meta":{"external_id":["T1060"],"kill_chain":["mitre-attack:enterprise-attack:persistence"],"mitre_data_sources":["Windows Registry","File monitoring"],"mitre_platforms":["Windows"],"refs":["https:\/\/attack.mitre.org\/wiki\/Technique\/T1060","http:\/\/msdn.microsoft.com\/en-us\/library\/aa376977","https:\/\/technet.microsoft.com\/en-us\/sysinternals\/bb963902"]}},{"id":"4784","collection_uuid":"","type":"mitre-enterprise-attack-attack-pattern","value":"System Information Discovery - T1082","tag_name":"misp-galaxy:mitre-enterprise-attack-attack-pattern=\"System Information Discovery - T1082\"","description":"An adversary may attempt to get detailed information about the operating system and hardware, including version, patches, hotfixes, service packs, and architecture.\n\n===Windows===\n\nExample commands and utilities that obtain this information include <code>ver<\/code>, Systeminfo, and <code>dir<\/code> within cmd for identifying information based on present files and directories.\n\n===Mac===\n\nOn Mac, the <code>systemsetup<\/code> command gives a detailed breakdown of the system, but it requires administrative privileges. Additionally, the <code>system_profiler<\/code> gives a very detailed breakdown of configurations, firewall rules, mounted volumes, hardware, and many other things without needing elevated permissions.\n\nDetection: System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell.\n\nPlatforms: Linux, macOS, Windows\n\nData Sources: Process command-line parameters, Process monitoring\n\nPermissions Required: User","galaxy_id":"32","source":"https:\/\/github.com\/mitre\/cti","authors":["MITRE"],"version":"4","uuid":"354a7f88-63fb-41b5-a801-ce3b377b36f1","tag_id":"236","meta":{"external_id":["T1082"],"kill_chain":["mitre-attack:enterprise-attack:discovery"],"mitre_data_sources":["Process command-line parameters","Process monitoring"],"mitre_platforms":["Linux","macOS","Windows"],"refs":["https:\/\/attack.mitre.org\/wiki\/Technique\/T1082"]}},{"id":"4721","collection_uuid":"","type":"mitre-enterprise-attack-attack-pattern","value":"Exfiltration Over Command and Control Channel - T1041","tag_name":"misp-galaxy:mitre-enterprise-attack-attack-pattern=\"Exfiltration Over Command and Control Channel - T1041\"","description":"Data exfiltration is performed over the Command and Control channel.  Data is encoded into the normal communications channel using the same protocol as command and control communications.\n\nDetection: Detection for command and control applies. Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used. (Citation: University of Birmingham C2)\n\nPlatforms: Linux, macOS, Windows\n\nData Sources: User interface, Process monitoring\n\nRequires Network: Yes","galaxy_id":"32","source":"https:\/\/github.com\/mitre\/cti","authors":["MITRE"],"version":"4","uuid":"92d7da27-2d91-488e-a00c-059dc162766d","tag_id":"41","meta":{"external_id":["T1041"],"kill_chain":["mitre-attack:enterprise-attack:exfiltration"],"mitre_data_sources":["User interface","Process monitoring"],"mitre_platforms":["Linux","macOS","Windows"],"refs":["https:\/\/attack.mitre.org\/wiki\/Technique\/T1041","https:\/\/arxiv.org\/ftp\/arxiv\/papers\/1408\/1408.1136.pdf"]}},{"id":"4705","collection_uuid":"","type":"mitre-enterprise-attack-attack-pattern","value":"Standard Application Layer Protocol - T1071","tag_name":"misp-galaxy:mitre-enterprise-attack-attack-pattern=\"Standard Application Layer Protocol - T1071\"","description":"Adversaries may communicate using a common, standardized application layer protocol such as HTTP, HTTPS, SMTP, or DNS to avoid detection by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n\nFor connections that occur internally within an enclave (such as those between a proxy or pivot node and other nodes), commonly used protocols are RPC, SSH, or RDP.\n\nDetection: Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.  Analyze packet contents to detect application layer protocols that do not follow the expected protocol for the port that is being used. (Citation: University of Birmingham C2)\n\nPlatforms: Linux, macOS, Windows\n\nData Sources: Packet capture, Netflow\/Enclave netflow, Process use of network, Malware reverse engineering, Process monitoring\n\nRequires Network: Yes","galaxy_id":"32","source":"https:\/\/github.com\/mitre\/cti","authors":["MITRE"],"version":"4","uuid":"355be19c-ffc9-46d5-8d50-d6a036c675b6","tag_id":"28","meta":{"external_id":["T1071"],"kill_chain":["mitre-attack:enterprise-attack:command-and-control"],"mitre_data_sources":["Packet capture","Netflow\/Enclave netflow","Process use of network","Malware reverse engineering","Process monitoring"],"mitre_platforms":["Linux","macOS","Windows"],"refs":["https:\/\/attack.mitre.org\/wiki\/Technique\/T1071","https:\/\/arxiv.org\/ftp\/arxiv\/papers\/1408\/1408.1136.pdf"]}}]}],"Object":[],"Tag":[{"id":"147","name":"Actor: APT28","colour":"#aa6c53","exportable":true,"user_id":"0","hide_tag":false,"numerical_value":null},{"id":"232","name":"Autoit","colour":"#ab875e","exportable":true,"user_id":"0","hide_tag":false,"numerical_value":null},{"id":"148","name":"Actor: Sofacy","colour":"#671079","exportable":true,"user_id":"0","hide_tag":false,"numerical_value":null},{"id":"233","name":"Downloader","colour":"#0dcd05","exportable":true,"user_id":"0","hide_tag":false,"numerical_value":null},{"id":"113","name":"Malware: Zebrocy","colour":"#89a9b6","exportable":true,"user_id":"0","hide_tag":false,"numerical_value":null},{"id":"234","name":"misp-galaxy:mitre-enterprise-attack-attack-pattern=\"Command-Line Interface - T1059\"","colour":"#0088cc","exportable":true,"user_id":"0","hide_tag":false,"numerical_value":null},{"id":"7","name":"misp-galaxy:mitre-enterprise-attack-attack-pattern=\"Scripting - T1064\"","colour":"#0088cc","exportable":true,"user_id":"0","hide_tag":false,"numerical_value":null},{"id":"235","name":"misp-galaxy:mitre-enterprise-attack-attack-pattern=\"Registry Run Keys \/ Start Folder - T1060\"","colour":"#0088cc","exportable":true,"user_id":"0","hide_tag":false,"numerical_value":null},{"id":"236","name":"misp-galaxy:mitre-enterprise-attack-attack-pattern=\"System Information Discovery - T1082\"","colour":"#0088cc","exportable":true,"user_id":"0","hide_tag":false,"numerical_value":null},{"id":"41","name":"misp-galaxy:mitre-enterprise-attack-attack-pattern=\"Exfiltration Over Command and Control Channel - T1041\"","colour":"#0088cc","exportable":true,"user_id":"0","hide_tag":false,"numerical_value":null},{"id":"28","name":"misp-galaxy:mitre-enterprise-attack-attack-pattern=\"Standard Application Layer Protocol - T1071\"","colour":"#0088cc","exportable":true,"user_id":"0","hide_tag":false,"numerical_value":null}]}}]}
